unit uClassEstadoModel;

interface

uses
  FireDAC.Comp.Client, Data.DB, System.SysUtils,
  uEstadoDTO, uClassConexaoSingleton;

type
  TEstadoModel = class
  private
    oQuery: TFDQuery;
  public
    function Update(const AEstado: TEstadoTDO): Boolean;
    function BuscarID: Integer;
    function Inserir(AEstado: TEstadoTDO): Boolean;

    constructor Create;
    destructor Destroy;  override;
  end;

implementation

{ TEstadoModel }

function TEstadoModel.BuscarID: Integer;
begin
  oQuery.Open('SELECT MAX(idEstado) as id FROM Estado');
  Result := oQuery.FieldByName('id').AsInteger;
end;

constructor TEstadoModel.Create;
begin
  oQuery := TFDQuery.Create(nil);

  oQuery.Connection := TConexaoSingleton.GetConexao;
end;

destructor TEstadoModel.Destroy;
begin
  if (Assigned(oQuery)) then
    FreeAndNil(oQuery);

  inherited;
end;

function TEstadoModel.Inserir(AEstado: TEstadoTDO): Boolean;
var
  sSql: String;
begin
  sSql := 'Insert into Estado(idEstado, UF, Nome) values('+
          IntToStr(AEstado.IdEstado)+','+
          AEstado.UF+', '+
          AEstado.Nome+')';
  Result := oQuery.ExecSQL(sSql) > 0;
end;

function TEstadoModel.Update(const AEstado: TEstadoTDO): Boolean;
var
  sSql: String;
begin
  sSql := 'Insert into Estado(idEstado, UF, Nome) values('+
          IntToStr(AEstado.IdEstado)+','+
          AEstado.UF+', '+
          AEstado.Nome+')';
  Result := oQuery.ExecSQL(sSql) > 0;
end;


end.
